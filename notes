private async Task GetOfficeVersionAsync(ManagementScope scope, ScanStatus scanStatus, CancellationToken cancellationToken)
{
    try
    {
        // Registry check for Office version
        string[] officeKeys = {
            @"SOFTWARE\Microsoft\Office\16.0\Common\InstallRoot",
            @"SOFTWARE\Microsoft\Office\15.0\Common\InstallRoot",
            @"SOFTWARE\Microsoft\Office\14.0\Common\InstallRoot",
            @"SOFTWARE\Microsoft\Office\12.0\Common\InstallRoot"
        };

        string officeVersion = "Unknown";

        foreach (var key in officeKeys)
        {
            using (var regKey = Registry.LocalMachine.OpenSubKey(key))
            {
                if (regKey != null)
                {
                    var path = regKey.GetValue("Path")?.ToString();
                    if (!string.IsNullOrEmpty(path))
                    {
                        var filePath = Path.Combine(path, "winword.exe"); // Checking Word as a reference
                        if (File.Exists(filePath))
                        {
                            var fileVersion = FileVersionInfo.GetVersionInfo(filePath).ProductVersion;
                            officeVersion = "Microsoft Office " + fileVersion.Substring(0, fileVersion.IndexOf('.'));
                            break;
                        }
                    }
                }
            }
        }

        if (officeVersion == "Unknown")
        {
            // WMI check as fallback
            var officeQuery = new ObjectQuery("SELECT Name, Version FROM Win32_Product WHERE Name LIKE 'Microsoft Office%'");
            using var officeSearcher = new ManagementObjectSearcher(scope, officeQuery);
            var officeList = await Task.Run(() => officeSearcher.Get().Cast<ManagementObject>()
                .Select(office => $"{office["Name"]} ({office["Version"]})")
                .ToList(), cancellationToken);
            if (officeList.Any())
            {
                officeVersion = string.Join(", ", officeList);
            }
        }

        if (officeVersion == "Unknown")
        {
            // Check for individual Office apps like Word, Excel, etc.
            var appsToCheck = new[] { "winword.exe", "excel.exe", "powerpnt.exe", "outlook.exe" };
            foreach (var app in appsToCheck)
            {
                var filePath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles), "Microsoft Office", app);
                if (File.Exists(filePath))
                {
                    var fileVersion = FileVersionInfo.GetVersionInfo(filePath).ProductVersion;
                    officeVersion = $"Microsoft Office {fileVersion.Substring(0, fileVersion.IndexOf('.'))}";
                    break;
                }
            }
        }

        scanStatus.MicrosoftOfficeVersion = officeVersion != "Unknown" ? officeVersion : "Not Installed";
    }
    catch (Exception ex)
    {
        Logger.Log(LogLevel.ERROR, $"Error getting Microsoft Office version: {ex.Message}", context: "GetOfficeVersionAsync");
        scanStatus.MicrosoftOfficeVersion = "Error";
    }
}