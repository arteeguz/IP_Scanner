private async Task GetOfficeVersionAsync(ManagementScope scope, ScanStatus scanStatus, CancellationToken cancellationToken)
{
    try
    {
        string officeVersion = await Task.Run(() =>
        {
            // Define the registry paths to search for individual Office applications
            string[] officeAppRegistryPaths =
            {
                @"SOFTWARE\Microsoft\Office\Word\InstallRoot",    // Word
                @"SOFTWARE\Microsoft\Office\Excel\InstallRoot",   // Excel
                @"SOFTWARE\Microsoft\Office\PowerPoint\InstallRoot" // PowerPoint
            };

            foreach (var path in officeAppRegistryPaths)
            {
                try
                {
                    using (var regKey = Registry.LocalMachine.OpenSubKey(path))
                    {
                        if (regKey != null)
                        {
                            var productVersion = regKey.GetValue("Path")?.ToString();
                            if (!string.IsNullOrEmpty(productVersion))
                            {
                                // Match the version with known Office versions
                                if (productVersion.Contains("16.0"))
                                {
                                    return "Microsoft Office 2016/2019/365";
                                }
                                else if (productVersion.Contains("15.0"))
                                {
                                    return "Microsoft Office 2013";
                                }
                                else if (productVersion.Contains("14.0"))
                                {
                                    return "Microsoft Office 2010";
                                }
                                else if (productVersion.Contains("12.0"))
                                {
                                    return "Microsoft Office 2007";
                                }
                            }
                        }
                    }
                }
                catch (Exception ex)
                {
                    Logger.Log(LogLevel.ERROR, $"Error accessing registry path: {path}. Exception: {ex.Message}", context: "GetOfficeVersionAsync");
                }
            }

            return "Microsoft Office not found";
        }, cancellationToken);

        scanStatus.MicrosoftOfficeVersion = officeVersion;
    }
    catch (Exception ex)
    {
        Logger.Log(LogLevel.ERROR, $"Error getting Microsoft Office version: {ex.Message}", context: "GetOfficeVersionAsync");
    }
}