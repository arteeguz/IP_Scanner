private async Task GetOfficeVersionAsync(ScanStatus scanStatus, CancellationToken cancellationToken)
{
    try
    {
        // Registry paths for Word
        var wordKeys = new List<string>
        {
            @"SOFTWARE\Microsoft\Office\16.0\Word\InstallRoot", // Office 2016/2019/365
            @"SOFTWARE\Microsoft\Office\15.0\Word\InstallRoot", // Office 2013
            @"SOFTWARE\Microsoft\Office\14.0\Word\InstallRoot", // Office 2010
            @"SOFTWARE\Microsoft\Office\12.0\Word\InstallRoot"  // Office 2007
        };

        string officeVersion = "Unknown";

        await Task.Run(() =>
        {
            foreach (var key in wordKeys)
            {
                using (var regKey = Registry.LocalMachine.OpenSubKey(key))
                {
                    if (regKey != null)
                    {
                        var path = regKey.GetValue("Path")?.ToString();
                        if (!string.IsNullOrEmpty(path))
                        {
                            var filePath = Path.Combine(path, "winword.exe");
                            if (File.Exists(filePath))
                            {
                                var fileVersion = FileVersionInfo.GetVersionInfo(filePath).ProductVersion;

                                if (fileVersion.StartsWith("16"))
                                {
                                    // Distinguish between Office 2016, 2019, and 365
                                    officeVersion = "Microsoft Office 2016/2019";

                                    // Check if it's Office 365
                                    var clickToRunKey = Registry.LocalMachine.OpenSubKey(@"SOFTWARE\Microsoft\Office\ClickToRun\Configuration");
                                    if (clickToRunKey != null)
                                    {
                                        officeVersion = "Microsoft Office 365";
                                    }
                                    else
                                    {
                                        // Check further to differentiate between 2016 and 2019
                                        var buildNumber = fileVersion.Split('.')[2];
                                        if (int.TryParse(buildNumber, out int build))
                                        {
                                            officeVersion = build >= 10827 ? "Microsoft Office 2019" : "Microsoft Office 2016";
                                        }
                                    }
                                }
                                else
                                {
                                    officeVersion = fileVersion.StartsWith("15") ? "Microsoft Office 2013" :
                                                    fileVersion.StartsWith("14") ? "Microsoft Office 2010" :
                                                    fileVersion.StartsWith("12") ? "Microsoft Office 2007" :
                                                    "Unknown Version";
                                }
                                break;
                            }
                        }
                    }
                }
            }
        }, cancellationToken);

        scanStatus.MicrosoftOfficeVersion = officeVersion != "Unknown" ? officeVersion : "Not Installed";
    }
    catch (Exception ex)
    {
        Logger.Log(LogLevel.ERROR, $"Error getting Microsoft Office version: {ex.Message}", context: "GetOfficeVersionAsync");
        scanStatus.MicrosoftOfficeVersion = "Error";
    }
}