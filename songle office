private async Task GetOfficeVersionAsync(ScanStatus scanStatus, CancellationToken cancellationToken)
{
    try
    {
        string officeVersion = "Unknown";

        // Check for individual Office apps like Word, Excel, etc.
        var appsToCheck = new[] { "winword.exe", "excel.exe", "powerpnt.exe", "outlook.exe" };
        foreach (var app in appsToCheck)
        {
            var programFilesPaths = new[]
            {
                Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles), "Microsoft Office", "root", "Office16", app),
                Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86), "Microsoft Office", "root", "Office16", app),
                Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles), "Microsoft Office", app),
                Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ProgramFilesX86), "Microsoft Office", app),
            };

            foreach (var path in programFilesPaths)
            {
                if (File.Exists(path))
                {
                    var fileVersion = FileVersionInfo.GetVersionInfo(path).ProductVersion;
                    officeVersion = $"Microsoft Office {fileVersion.Substring(0, fileVersion.IndexOf('.'))}";
                    break;
                }
            }

            if (officeVersion != "Unknown")
            {
                break;
            }
        }

        scanStatus.MicrosoftOfficeVersion = officeVersion != "Unknown" ? officeVersion : "Not Installed";
    }
    catch (Exception ex)
    {
        Logger.Log(LogLevel.ERROR, $"Error getting Microsoft Office version: {ex.Message}", context: "GetOfficeVersionAsync");
        scanStatus.MicrosoftOfficeVersion = "Error";
    }
}