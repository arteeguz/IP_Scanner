private async Task GetOfficeVersionAsync(ManagementScope scope, ScanStatus scanStatus, CancellationToken cancellationToken)
{
    try
    {
        // Optimized Registry check for Office version
        string[] officeKeys = {
            @"SOFTWARE\Microsoft\Office\16.0\Common\InstallRoot",
            @"SOFTWARE\Microsoft\Office\15.0\Common\InstallRoot",
            @"SOFTWARE\Microsoft\Office\14.0\Common\InstallRoot",
            @"SOFTWARE\Microsoft\Office\12.0\Common\InstallRoot"
        };

        string officeVersion = "Unknown";

        foreach (var key in officeKeys)
        {
            using (var regKey = Registry.LocalMachine.OpenSubKey(key))
            {
                if (regKey != null)
                {
                    var path = regKey.GetValue("Path")?.ToString();
                    if (!string.IsNullOrEmpty(path))
                    {
                        var filePath = Path.Combine(path, "winword.exe"); // Checking Word as a reference
                        if (File.Exists(filePath))
                        {
                            var fileVersion = FileVersionInfo.GetVersionInfo(filePath).ProductVersion;
                            officeVersion = "Microsoft Office " + fileVersion.Substring(0, fileVersion.IndexOf('.'));
                            break;
                        }
                    }
                }
            }
        }

        if (officeVersion == "Unknown")
        {
            // Quick check for individual Office apps (Word, Excel) in standard installation paths
            string[] appPaths = {
                @"C:\Program Files\Microsoft Office\root\Office16\winword.exe",
                @"C:\Program Files\Microsoft Office\root\Office15\winword.exe",
                @"C:\Program Files\Microsoft Office\root\Office14\winword.exe"
            };

            foreach (var appPath in appPaths)
            {
                if (File.Exists(appPath))
                {
                    var fileVersion = FileVersionInfo.GetVersionInfo(appPath).ProductVersion;
                    officeVersion = "Microsoft Office " + fileVersion.Substring(0, fileVersion.IndexOf('.'));
                    break;
                }
            }
        }

        scanStatus.MicrosoftOfficeVersion = officeVersion != "Unknown" ? officeVersion : "Not Installed";
    }
    catch (Exception ex)
    {
        Logger.Log(LogLevel.ERROR, $"Error getting Microsoft Office version: {ex.Message}", context: "GetOfficeVersionAsync");
        scanStatus.MicrosoftOfficeVersion = "Error";
    }
}